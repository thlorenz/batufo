{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/routes/Home.svelte","../../src/routes/Editor.svelte","../../src/routes/Watch.svelte","../../src/routes/Sponsor.svelte","../../src/devlog/networking.md","../../src/devlog/batufo-networking.md","../../src/devlog/batufo-todos.md","../../src/devlog/batufo-attrib.md","../../src/routes/Devlog.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let title\n  export let twitterURL\n  export let githubSourceURL\n\n  export let latestReleaseURL\n  let macOSReleaseURL = latestReleaseURL.replace('tag', 'download') + '/batufo-macos.zip'\n</script>\n\n<style>\n  .gif {\n    max-width: 80vw;\n  }\n  .subtext {\n    font-size: 12px;\n    font-style: italic;\n  }\n</style>\n\n<main class=\"main\">\n  <h1>{title}</h1>\n\n  <a href=\"http://thlorenz.com/batufo/webgame\">\n    <img class=\"gif\" alt=\"Game in Action\" src=\"assets/face-off.gif\" />\n  </a>\n\n  <h5>Android</h5>\n  <a href='https://play.google.com/store/apps/details?id=com.thlorenz.batufo&utm_source=home-page&pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'>\n    <img width=\"208px\" alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png'/>\n  </a>\n  <h5>Linux</h5>\n  <a href=\"https://snapcraft.io/batufo\">\n    <img alt=\"Get it from the Snap Store\" src=\"https://snapcraft.io/static/images/badges/en/snap-store-black.svg\" />\n  </a>\n  <h5>macOS</h5>\n  <a href=\"{macOSReleaseURL}\">\n    <img width=\"108px\" alt=\"Install on macOS\" src=\"https://cdn1.iconfinder.com/data/icons/system-black-circles/512/mac_os_X-512.png\" />\n  </a>\n  <br>\n  <a class=\"subtext\" alt=\"Installation Instructions\" target=\"_blank\" href=\"pdfs/batufo-installation-macOS.pdf\">Installation Instructions</a>\n  <h5>Play Online</h5>\n  <a href=\"http://thlorenz.com/batufo/webgame\">\n    <img width=\"128px\" alt=\"Play in the Browser\" src=\"https://icons.iconarchive.com/icons/google/chrome/128/Google-Chrome-icon.png\" />\n  </a>\n  <p>\n    <a href=\"{twitterURL}\" target=\"_blank\">Follow on Twitter</a> |\n    <a href=\"{githubSourceURL}\" target=\"_blank\">Source on Github</a>\n  </p>\n</main>\n","<style>\n  .italic {\n    font-style: italic;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte'\n\n  export let title\n  export let editorURL\n  export let iframe = null\n  export let windowWidth\n  export let windowHeight\n\n  onMount(() => iframe.focus())\n\n  $: editorWidth = windowWidth * 0.95\n  $: editorHeight =windowHeight * 0.80\n</script>\n\n<main>\n  <h1>{title}</h1>\n  <p>\n  <a href=\"{editorURL}\" target=\"_blank\">Full Screen</a> <span class=\"italic\">Recommended</span>\n  </p>\n  <iframe\n    title=\"game\"\n    class=\"center\"\n    width=\"{editorWidth}\"\n    height=\"{editorHeight}\"\n    src=\"{editorURL}\"\n    frameborder=\"0\"\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope;\n    picture-in-picture\"\n    allowfullscreen\n    bind:this=\"{iframe}\"\n  ></iframe>\n</main>\n","<script>\n  export let title\n  export let embedPlaylist\n  export let twitchChannelURL\n  export let subChannelURL\n  export let youtubePlaylistURL\n\n  export let windowWidth\n\n  $: videoWidth = Math.min(windowWidth * 0.66, 560)\n  $: videoHeight = videoWidth / 1.77\n</script>\n\n<main>\n  <h1>{title}</h1>\n  <h4>Watch Game Development on YouTube or live on Twitch</h4>\n  <iframe\n    title=\"YouTube\"\n    class=\"center\"\n    width=\"{videoWidth}\"\n    height=\"{videoHeight}\"\n    src=\"{embedPlaylist}\"\n    frameborder=\"0\"\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope;\n    picture-in-picture\"\n    allowfullscreen\n  ></iframe>\n  <div>\n    <a href=\"{subChannelURL}\" target=\"_blank\">Subscribe on YouTube</a> |\n    <a href=\"{twitchChannelURL}\" target=\"_blank\">Twitch Channel</a> |\n    <a href=\"{youtubePlaylistURL}\" target=\"_blank\">YouTube Playlist</a>\n  </div>\n</main>\n","<script>\n  export let title\n\n  export let githubSponsorURL\n  export let paypalSponsorURL\n  export let patreonSponsorURL\n</script>\n\n<style>\n  .narrow {\n    max-width: 680px;\n    margin: 0 auto;\n  }\n  .buttons {\n    padding: 50px;\n  }\n  .buttons > a {\n    padding: 10px;\n  }\n</style>\n\n<main>\n  <h1>{title}</h1>\n  <h3>Help me keep developing and sharing this Open Source Game</h3>\n\n  <p class=\"narrow\">\n    Many nights and weekends went into the current version of the game.\n    <br>\n    <br>\n    I love sharing it with others so they can enjoy it and learn how games are developed.\n    <br>\n    <br>\n    I am asking for your support to keep the game server running and be able to invest more time.\n    <br>\n    <br>\n    If you like the game and related content please click one of the links below.\n  </p>\n\n  <div class=\"buttons\">\n    <a href=\"{githubSponsorURL}\">\n      Sponsor me on Github 💰\n    </a>\n    <br>\n    <br>\n    <a href=\"{paypalSponsorURL}\">Send me a Paypal Token of Appreciation 💸</a>\n    <br>\n    <br>\n    <a href=\"{patreonSponsorURL}\"><img alt=\"become a patron\" src=\"https://c5.patreon.com/external/logo/become_a_patron_button.png\" height=\"35px\"></a>\n  </div>\n  <p class=\"narrow\">\n   💖 I appreciate your help, you are great! 💖\n  </p>\n\n</main>\n","<script>\n    export let link\n</script>\n\n# [Multiplayer Client-Server Architecture]({link})\n\n<p class=\"right\">`Saturday, April 4, 2020`</p>\n\n## Terms\n\n### Latency aka RTT aka Ping\n\n- round trip time is the time for a client message to result in a received server message\n- the larger the RTT is, the larger is the latency\n\n#### Jitter\n\n- the rate of change in the RTT\n\n### Authorative Server\n\n- game happens in server under our control\n- clients just send inputs and render world as simulated by the server\n\n### Lockstep\n\n- client waits for server messages before updating or rendering anything\n- used in Doom, worked well over LAN, but was unplayable over the internet\n\n## Server Time Step\n\n- goal is to decouple server updates from client command frequency\n- queue player inputs without any processing (game loop does not run yet)\n- instead game loop runs at much lower frequency i.e. every 100ms (time step)\n- applies all queued player inputs\n  - to make physics more realistic they may be applied at smaller time deltas\n- then we take snapshot of resulting game state and broadcast to clients\n- in order for client to successfully predict other entities in between updates it needs to\n  have sufficient info, in our game that means knowing the players + bullets velocity vectors\n\n### Prediction\n\n- predict local player and other entities from last given state\n    - in our game that means applying entity velocity onto last known entity\n     position considering time delta\n- when we get server state we'll _correct_ our prediction\n- best done via shared game simulation code\n    - in our game controller code is shared, so we are golden\n- the more deterministic our game is the better the result\n- use message IDs to be able to replay commands that server hasn't received yet [see](https://www.gabrielgambetta.com/client-side-prediction-server-reconciliation.html#server-reconciliation)\n\n\n### Dead Reckoning\n\n- using client side prediction we may result in a slightly different game\n state than server arrived at \n- once we receive an update from the server and it doesn't match our state, we\n correct our assumptions\n- falls down when game state is less predictable as that means we'd correct\n our state all the time leading to lots of jumps, i.e. if player direction\n  changes frequently\n\n### Smoothing\n\n- correcting client position to position sent by server in one step may lead to jumps\n- instead we can correct position slowly over time to make it look _smoother_\n- if interpolation work properly smoothing is not required as we know ahead of time where the\n  entity will be\n\n### Interpolation\n\n- on the client show all entities except the player we control in the past\n- buffer server game state messages and replay positions of other players delayed\n  - usually two packets behind\n- as a result we see ourselves in the present but everyone else in the past\n- as this adds more lag to the opponents it makes lag compensation more importantXC\n- adds client complexity\n\n### Lag Compensation\n\n- due to network lag and interpolation we're aiming at opponent's past positions\n- to fix the server does the following\n  - reconstructs the world as we saw it when we fired shot (takes step back in time)\n  - this means all entities are moved back to where they were in that past\n  - then processes our action and determines result of shot as it would have happened in the\n    past\n  - then moves game state back to present and sends snapshot - note that if present state is affected by outcome of player action applied in the past that needs to be applied to that present game state\n- adds server complexity\n\n\n## Resources\n\n- [Fast-Paced Multiplayer four parts](https://www.gabrielgambetta.com/client-server-game-architecture.html)\n- [Making Fast-Paced Multiplayer Networked Games is Hard](https://www.gamasutra.com/blogs/MarkMennell/20140929/226628/Making_FastPaced_Multiplayer_Networked_Games_is_Hard.php)\n\n### Valve\n\n- [Prediction](https://developer.valvesoftware.com/wiki/Prediction)\n- [Interpolation](https://developer.valvesoftware.com/wiki/Interpolation)\n- [Lag Compensation](https://developer.valvesoftware.com/wiki/Lag_compensation)\n- [Interpolation / Latency\n  Compensation](https://developer.valvesoftware.com/wiki/Latency_Compensating_Methods_in_Client/Server_In-game_Protocol_Design_and_Optimization)\n- [Source Multiplayer\n  Networking](https://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking)\n\n### IT Hare on Software\n\n- [Game Entities and Interactions](http://ithare.com/chapter-ii-game-entities-and-interactions-from-upcoming-book-development-and-deployment-of-mmog/)\n- [On Cheating, P2P, and non-Authoritative Servers](http://ithare.com/chapter-iii-on-cheating-p2p-and-non-authoritative-servers-from-dd-of-mmog-book/)\n- [MMOG. RTT, Input Lag, and How to Mitigate Them](Http://ithare.com/mmog-rtt-input-lag-and-how-to-mitigate-them/)\n- [MMOG: World States and Reducing Traffic](http://ithare.com/mmog-world-states-and-reducing-traffic/)\n- [MMOG. Point-to-Point Communications and non-blocking RPCs](http://ithare.com/mmog-point-to-point-communications-and-non-blocking-rpcs/)\n\n### Gaffer On Games\n\n- [Deterministic Lockstep](https://gafferongames.com/post/deterministic_lockstep/)\n- [State Synchronization](https://gafferongames.com/post/state_synchronization/)\n- [Snapshot Interpolation](https://gafferongames.com/post/snapshot_interpolation/)\n\n### Unreal\n\n- [Unreal Engine 2: Unreal Networking\n  Architecture](https://docs.unrealengine.com/udk/Three/NetworkingOverview.html)\n- [Unreal Engine 4: Networking Overview](https://docs.unrealengine.com/en-US/Gameplay/Networking/Overview/index.html)\n","<script>\n    export let link\n</script>\n\n# [Appling Multiplayer Strategies to Our Game]({link})\n\n<p class=\"right\">`Saturday, April 4, 2020`</p>\n\n## Main Strategy Used\n\n- authoritative server sending updates every 100ms\n- client updates are limited to 10/second\n- client side prediction is used to exrapolate opponent's position from previous position and\n  their velocity\n- other players and bullets are predicted on the client from previous position and velocity\n  - same controllers as on server are used which allows us to predict collisions client side as\n    well\n- use dead reckoning to correct client predictions, both for opponents and bullets as well as\n  our own player\n \n\n## Limiting Player Inputs\n\n- require 100ms between each shot\n  - instead of sending a key press we send `bulletCreated(angle)`\n- require 100ms between each thrust\n  - instead of sending key press we send `appliedThrust(anger)`\n  - server then calculates velocity\n- instead of sending rotation input we send `updatedAngle(angle)`\n- change of player angle happens in real time but is reported to the server at a 100ms interval\n  even if no other client action occured\n\n## Server Processing of Player Inputs\n\n- delay execution of action until server tick\n  - in the worst case bullet is trailing client side prediction by 100ms\n- find way to align client input ticks to server ticks\n\n## To be seen\n\n- test how well dead reckoning works for our game and try the following if we end up with lots\n  of player position jumps\n- apply smooting to correct position slowly over time\n- if nothing else works look into interpolation\n\n## Smaller Packets\n\n- if packets get too large we can omit bullet positions\n  - instead rely on client prediction to show bullets in flight\n  - use server to report created bullets `createBullet(bulletID, position, velocity)`\n    - after that client predicts positions\n  - and exploded bullets\n    - `explodedBullet(bulletID, position)`\n- alternative is to limit amount of bullets / ammo available\n","<script>\n    export let link\n</script>\n\n# [What's left to go to _\"Production\"_]({link})\n\n<p class=\"right\">`Friday, May 8, 2020`</p>\n\nThe game is basically finished at this point. We demonstrated that it is possible to build\nMultiplayer games like this with Flutter.\n\nWe also learned that making the server authoritative adds a lot of complexity. Not that it\nisn't solvable, but not worrying about cheaters makes the life of us developers a lot easier ;)\n\nBelow I'm listing known issues that would need to be considered/fixed before the game as is\nwould be ready to go to _\"production\"_ to be played by people all over the world.\n\nThe video series doesn't include these fixes as it ends here as its purpose was merely to get\npeople excited about building games in general and to demonstrate that Flutter is a viable and\nalso fun technology to do so.\n\nIf you're inspired you may continue building the game or build your own.\n\nIf you do the former you can start attacking issues listed below and/or refactor the code to\nnot require an authoritative server and get an idea how much easier things become as a result.\n\nHappy Hacking!\n\n## Client Side\n\n-  sync player position smoothly\n  - when position differs from server sent position don't jump to it immediately\n  - instead adjust players velocity so that it converges towards the server position\n  - over time server and client positions should either sync up or at least they don't go\n    further out of sync event though we don't force correct with a jump\n\n-  client networking\n  - when client disconnects i.e. I'm in a tunnel it needs to be able to reconnect\n  - this requires some logic to detect disconnects and have a reconnect strategy, i.e. [circuit breaker](https://en.wikipedia.org/wiki/Circuit_breaker_design_pattern) to prevent it trying to reconnect indefinitely\n  - if reconnection fails tell the client that game is over or similar\n\n## Server Side\n\n-  Clean up Games\n  - as of now games that finished never get collected\n  - first we need a way to detect if a game is over\n    - when only one player is alive\n    - it is nice to show player still floating around even when game is over\n    - how long do we give all players to restart game before we collect it\n    - what if all players disconnect?\n    - how long can a player be disconnected until it is disqualified and declared dead?\n\n-  Server needs to handle client reconnecting\n  - when client provides game + client ids we reconnect the update streams\n\n-  Make Server resilient\n  - what happens if server crashes?\n  - need to have a way to detect that and have it restarted\n  - this can be handled by tools like systemd or load balancers\n\n-  How do sticky sessions work when we have multiple servers\n  - only need to fix this once we have certain success and lots of concurrent players\n  - once we have multiple servers need to figure out how to propagate RPC streams\n  - which load balancers support those + http2\n\n-  deploy server(s)\n  - where can we deploy dart servers?\n\n## Added Features\n\n-  Pickups\n  - have health packets to allow players to pickup and increase their health balance\n  - other pickups could increase player score\n\n-  Black Holes\n  - draw players in to make things more interesting\n\n-  Visualize Thrust + Bullet State\n  - players can only apply thrust and shoot at certain intervals\n  - it would be nice to visualize the time left until we can do either\n  - it could look similar to the health bar\n","<script>\n    export let link\n</script>\n\n# [Batufo Attributions]({link})\n\n<p class=\"right\">`Sunday, July 5, 2020`</p>\n\nWith the game arriving at its first version and published for numerous platforms I wanted to\ntake some time to thank and attribute the people that contributed with image and sound assets.\n\nThe assets I'm refererring to are contained [inside the assets\nfolder](https://github.com/thlorenz/batufo/tree/master/client/assets) of the game.\n\nMany thanks to you all! 🙏 ❤️\n\n## images\n\n### bomb and app icon\n\n- icons/app-icon.png\n- images/sprites/bomb.png\n- Tibisay Escobar provided as CC-By-SA 3.0\n\n### bullet explosion\n\n- images/sprites/bullet-explosion.png\n\n- [url](https://opengameart.org/content/explosion)\n- CC0\n\n### planets level background\n\n- images/bg/level-icon.png\n\n- [url](https://opengameart.org/content/hd-planet)\n- LICENSE: CC0\n\n### planet sprites\n\n- images/bg/planets.png\n\n- [url](https://opengameart.org/content/16-planet-sprites)\n- CC-By-SA 3.0\n\n### pickups\n\n- medkit.png, shield.png\n- [url](https://opengameart.org/content/pickup-items-icons)\n- CC0\n\n## audio\n\n### audio/bullet.wav\n\n- [url](https://opengameart.org/content/space-shooter-sound-effects)\n- CC-By 3.0\n\n### audio/bullet-hit-wall.wav\n\n- [url](https://opengameart.org/content/25-cc0-bang-firework-sfx)\n- CC0\n\n### audio/ufo-hit-wall.wav\n\n- [url](https://opengameart.org/content/sfx-the-ultimate-2017-16-bit-mini-pack)\n- CC0\n\n### audio/thrust.wav\n\n- [url](https://opengameart.org/content/50-cc0-sci-fi-sfx)\n- CC0\n\n### audio/pickup-medkit.wav\n\n- [url](https://opengameart.org/content/sfx-the-ultimate-2017-16-bit-mini-pack)\n- CC0\n\n### audio/pickup-shield.wav\n\n- [url](https://opengameart.org/content/8-bit-sound-effect-pack-vol-001)\n- CC0\n\n### audio/pickup-bomb.wav\n\n- [url](https://opengameart.org/content/8-bit-sound-effect-pack-vol-001)\n- CC0\n\n### audio/bomb-exploding.wav\n\n- [url](https://opengameart.org/content/sfx-the-ultimate-2017-16-bit-mini-pack)\n- CC0\n\n### audio/teleport.wav\n\n- [url](https://opengameart.org/content/sfx-the-ultimate-2017-16-bit-mini-pack)\n- CC0\n","<style>\n  article {\n    text-align: left;\n    max-width: 700px;\n    margin: 1em auto;\n    padding: 0.2em 0.4em;\n  }\n  .separator {\n    background: #aaa;\n    border: solid #aaa 0.04em;\n    border-radius: 2px;\n  }\n  :global(article h1, article h2, article h3, article h4, article h4, article\n      h5) {\n    text-align: left;\n  }\n  :global(article h1) {\n    font-size: 1.7em;\n    text-align: left;\n  }\n  :global(article h2) {\n    padding-left: 0.1em;\n    text-align: left;\n  }\n  :global(article h3, article h4, article h4, article h5) {\n    padding-left: 0.4em;\n  }\n  :global(article .right) {\n    text-align: right;\n  }\n</style>\n\n<script>\n  import Networking from '../devlog/networking.md'\n  import BatufoNetworking from '../devlog/batufo-networking.md'\n  import BatufoTodos from '../devlog/batufo-todos.md'\n  import BatufoAttrib from '../devlog/batufo-attrib.md'\n  const bafuNetworkingID = 'devlog-applying-strategies'\n  const multiplayerArchitectureID = 'devlog-multiplayer-architecture'\n  const batufoTodosID = 'devlog-batufo-todos'\n  const batufoAttribID = 'devlog-batufo-attrib'\n</script>\n\n<main>\n  <article id=\"{batufoAttribID}\">\n    <BatufoAttrib link=\"#{batufoAttribID}\" />\n  </article>\n  <article id=\"{batufoTodosID}\">\n    <BatufoTodos link=\"#{batufoTodosID}\" />\n  </article>\n  <article id=\"{bafuNetworkingID}\">\n    <BatufoNetworking link=\"#{bafuNetworkingID}\" />\n  </article>\n  <p class=\"separator\"></p>\n  <article id=\"{multiplayerArchitectureID}\">\n    <Networking link=\"#{multiplayerArchitectureID}\" />\n  </article>\n</main>\n","<style>\n  @import url('https://fonts.googleapis.com/css?family=Space+Mono&display=swap');\n  :global(main) {\n    font-family: 'Space Mono', monospace;\n    text-align: center;\n    padding: 0.3em;\n    max-width: none;\n    margin: 0 auto;\n    width: fit-content;\n  }\n\n  :global(h1) {\n    color: #2E577C;\n    text-transform: uppercase;\n    font-size: 2.4em;\n    font-weight: 100;\n  }\n  :global(h2) {\n    margin-bottom: 2em;\n    font-size: 1.4em;\n  }\n  :global(h4) {\n    margin-bottom: 2em;\n    font-size: 1em;\n  }\n  nav {\n    text-align: center;\n  }\n  :global(nav > a) {\n    margin: 0 1em 0 1em;\n    cursor: pointer;\n    font-size: 1.1em;\n  }\n  :global(.underline) {\n    text-decoration: underline;\n  }\n</style>\n\n<script>\n  import Home from './routes/Home.svelte'\n  import Editor from './routes/Editor.svelte'\n  import Watch from './routes/Watch.svelte'\n  import Sponsor from './routes/Sponsor.svelte'\n  import Devlog from './routes/Devlog.svelte'\n\n  export let title\n  export let embedPlaylist\n  export let subChannelURL\n  export let gameWebURL\n  export let editorURL\n  export let twitchChannelURL\n  export let latestReleaseURL\n  export let twitterURL\n  export let youtubePlaylistURL\n  export let state\n  export let routes\n  export let rootURL\n  export let githubSourceURL\n\n  export let githubSponsorURL\n  export let paypalSponsorURL\n  export let patreonSponsorURL\n\n  const getWindowWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth\n\n  const getWindowHeight = () => window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight\n\n  $: homeClass = state.currentRoute === routes.home ? 'underline' : ''\n  $: editorClass = state.currentRoute === routes.editor ? 'underline' : ''\n  $: watchClass = state.currentRoute === routes.watch ? 'underline' : ''\n  $: sponsorClass = state.currentRoute === routes.sponsor ? 'underline' : ''\n  $: devlogClass = isOnDevlogPage() ? 'underline' : ''\n  $: windowWidth = getWindowWidth()\n  $: windowHeight = getWindowHeight()\n\n\n  const navigateHome = () => {\n    state.currentRoute = routes.home\n    state = state\n      window.history.state\n  }\n  const navigateEditor = () => {\n    state.currentRoute = routes.editor\n    state = state\n  }\n\n  const navigateWatch = () => {\n    state.currentRoute = routes.watch\n    state = state\n  }\n\n  const navigateSponsor = () => {\n    state.currentRoute = routes.sponsor\n    state = state\n  }\n\n  const navigateDevlog = () => {\n    state.currentRoute = routes.devlog\n    state = state\n  }\n\n  const isOnDevlogPage = () => {\n    const hash = location.hash\n    return hash.startsWith(routes.devlog.hash)\n  }\n\n  window.onresize = () => {\n    windowWidth = getWindowWidth()\n    windowHeight = getWindowHeight()\n  }\n</script>\n\n<main>\n  <nav>\n    <a href=\"{rootURL + routes.home.hash }\"\n       class=\"{homeClass}\"\n       on:click={navigateHome}>Home</a>\n    <a href=\"{rootURL + routes.watch.hash }\"\n       class=\"{watchClass}\"\n       on:click={navigateWatch}>Watch</a>\n    <a href=\"{rootURL + routes.devlog.hash }\"\n       class=\"{devlogClass}\"\n       on:click={navigateDevlog}>Devlog</a>\n    <a href=\"{rootURL + routes.editor.hash}\"\n       class=\"{editorClass}\"\n       on:click={navigateEditor}>Editor</a>\n  </nav>\n  <div>\n    {#if state.currentRoute === routes.home}\n      <Home\n        {title}\n        {embedPlaylist}\n        {gameWebURL}\n        {twitterURL}\n        {twitchChannelURL}\n        {latestReleaseURL}\n        {githubSourceURL}\n        {windowWidth}\n      />\n    {:else if state.currentRoute === routes.editor}\n      <Editor {title} {editorURL} {windowWidth} {windowHeight} />\n    {:else if state.currentRoute === routes.watch}\n      <Watch {title}\n        {subChannelURL}\n        {twitchChannelURL}\n        {youtubePlaylistURL}\n        {windowWidth}\n        {embedPlaylist} />\n    {:else if state.currentRoute === routes.sponsor}\n      <Sponsor {title}\n        {githubSponsorURL}\n        {paypalSponsorURL}\n        {patreonSponsorURL} />\n    {:else if state.currentRoute === routes.devlog || isOnDevlogPage()}\n      <Devlog />\n    {/if}\n  </div>\n</main>\n","import App from './App.svelte'\n\nimport gameUpdate from '../data/game-update.json'\n\nconst routes = {\n  home: { id: 'home', hash: '' },\n  editor: { id: 'editor', hash: '#editor' },\n  watch: { id: 'watch', hash: '#watch' },\n  sponsor: { id: 'sponsor', hash: '#sponsor' },\n  devlog: { id: 'devlog', hash: '#devlog' },\n}\n\nconst isOnDevlogPage = () => {\n  const hash = location.hash\n  return hash.startsWith(routes.devlog.hash)\n}\n\nconst hash = location.hash\nconst startingRoute =\n  hash === routes.editor.hash\n    ? routes.editor\n    : hash === routes.watch.hash\n    ? routes.watch\n    : hash === routes.sponsor.hash\n    ? routes.sponsor\n    : isOnDevlogPage()\n    ? routes.devlog\n    : routes.home\n\nconst rootURL = location.href.includes('localhost')\n  ? '/'\n  : 'https://thlorenz.github.io/batufo/'\n\nconst app = new App({\n  target: document.body,\n  props: {\n    title: '2D Multiplayer Flutter Game',\n    embedVideo: 'https://www.youtube.com/embed/xTcO6lPMUaA',\n    embedPlaylist:\n      'https://www.youtube.com/embed/videoseries?list=PL4k64WemroGlTDHJzVo_O1l6C0nuwRc6G',\n    subChannelURL: 'https://www.youtube.com/user/thlorenz10?sub_confirmation=1',\n    gameWebURL: 'http://thlorenz.com/batufo/webgame',\n    editorURL: 'https://thlorenz.github.io/batufo/editor',\n    latestReleaseURL: gameUpdate.release.url,\n    githubSourceURL: 'https://github.com/thlorenz/batufo',\n    youtubePlaylistURL:\n      'https://www.youtube.com/watch?list=PL4k64WemroGlTDHJzVo_O1l6C0nuwRc6G&v=xTcO6lPMUaA',\n    twitchChannel: 'thlorenz',\n    twitchChannelURL: 'https://www.twitch.tv/thlorenz',\n    twitterURL: 'https://twitter.com/thlorenz',\n    githubSponsorURL: 'https://github.com/sponsors/thlorenz',\n    paypalSponsorURL: 'https://www.paypal.me/thlorenz/5',\n    patreonSponsorURL: 'https://www.patreon.com/bePatron?u=8663953',\n    routes,\n    state: {\n      currentRoute: startingRoute,\n    },\n    rootURL,\n  },\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","title","twitterURL","githubSourceURL","latestReleaseURL","macOSReleaseURL","replace","editorURL","iframe","windowWidth","windowHeight","focus","editorWidth","editorHeight","embedPlaylist","twitchChannelURL","subChannelURL","youtubePlaylistURL","videoWidth","Math","min","videoHeight","githubSponsorURL","paypalSponsorURL","patreonSponsorURL","link","batufoAttribID","batufoTodosID","bafuNetworkingID","multiplayerArchitectureID","currentRoute","home","editor","watch","sponsor","devlog","hash","r","gameWebURL","state","routes","rootURL","getWindowWidth","window","innerWidth","documentElement","clientWidth","body","getWindowHeight","innerHeight","clientHeight","isOnDevlogPage","location","startsWith","onresize","homeClass","editorClass","watchClass","sponsorClass","devlogClass","id","startingRoute","href","includes","embedVideo","gameUpdate","url","twitchChannel"],"mappings":"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"}